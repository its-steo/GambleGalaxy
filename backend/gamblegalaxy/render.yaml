services:
  # Django Web Service
  - type: web
    name: gamblegalaxy-backend
    runtime: python3
    plan: starter # Change to 'standard' or higher for production
    buildCommand: |
      pip install --upgrade pip
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
      python manage.py migrate
    startCommand: |
      daphne gamblegalaxy.asgi:application
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: DEBUG
        value: false
      - key: SECRET_KEY
        generateValue: true
      - key: DATABASE_URL
        fromDatabase:
          name: gamblegalaxy-db
          property: connectionString
      - key: ALLOWED_HOSTS
        value: gamblegalaxy.onrender.com,localhost,127.0.0.1
      - key: CORS_ALLOWED_ORIGINS
        value: https://your-frontend-domain.onrender.com,http://localhost:3000
      - key: FOOTBALL_API_KEY
        value: 433af63d5d2af7799890c753a53fe758
      - key: REDIS_URL
        fromService:
          type: redis
          name: gamblegalaxy-redis
          property: connectionString
    healthCheckPath: /api/health/
    autoDeploy: true
    
  # Redis Service for WebSocket Channel Layer
  - type: redis
    name: gamblegalaxy-redis
    plan: starter
    maxmemoryPolicy: allkeys-lru

databases:
  # PostgreSQL Database
  - name: gamblegalaxy-db
    plan: starter # Change to 'standard' or higher for production
    databaseName: gamblegalaxy
    user: gamblegalaxy_user

# Static Files (if you need a separate static file service)
# Uncomment if you want to serve static files separately
# - type: static
#   name: gamblegalaxy-static
#   staticPublishPath: ./staticfiles
#   buildCommand: |
#     pip install -r requirements.txt
#     python manage.py collectstatic --noinput
#   routes:
#     - type: rewrite
#       source: /static/*
#       destination: /static/$1